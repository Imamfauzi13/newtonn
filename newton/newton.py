# -*- coding: utf-8 -*-
"""newton

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TnGRqa8ofMvG2-z5nV5C97-HoJFcC4Pe
"""

# Bagian ini seharusnya dijalankan di awal di Colab, bukan di dalam script Python utama
# !pip install streamlit pyngrok --quiet

import streamlit as st
import time
import os # Import os untuk operasi file

def calculate_newton_law(law_type, mass=None, acceleration=None, force=None):
    """Menghitung berdasarkan Hukum Newton."""
    if law_type == "Hukum Newton II (F = m * a)":
        if mass is not None and acceleration is not None:
            result = mass * acceleration
            return f"Gaya (F) = {result:,.2f} Newton (N)"
        elif force is not None and mass is not None:
            if mass == 0:
                return "Massa tidak boleh nol untuk menghitung percepatan."
            result = force / mass
            return f"Percepatan (a) = {result:,.2f} meter/detik¬≤ (m/s¬≤)"
        elif force is not None and acceleration is not None:
            if acceleration == 0:
                return "Percepatan tidak boleh nol untuk menghitung massa."
            result = force / acceleration
            return f"Massa (m) = {result:,.2f} kilogram (kg)"
        else:
            return "Mohon masukkan dua dari tiga nilai: Gaya, Massa, Percepatan."
    elif law_type == "Hukum Newton I (Inersia)" or law_type == "Hukum Newton III (Aksi-Reaksi)":
        return "Tidak ada perhitungan numerik langsung untuk hukum ini, hanya konsep."
    return "Pilih jenis Hukum Newton."

def main():
    st.set_page_config(page_title="Kalkulator Hukum Newton", page_icon="‚öõÔ∏è", layout="centered")

    st.title("‚öõÔ∏è Kalkulator Hukum Newton ‚öõÔ∏è")
    st.markdown("""
        <p style='text-align: center; font-size: 18px;'>
            Pahami dan hitung dasar-dasar fisika dengan Hukum Newton!
        </p>
    """, unsafe_allow_html=True)

    st.sidebar.header("Pilih Hukum Newton")
    law_type = st.sidebar.selectbox(
        "Jenis Hukum Newton",
        [
            "Hukum Newton II (F = m * a)",
            "Hukum Newton I (Inersia)",
            "Hukum Newton III (Aksi-Reaksi)"
        ]
    )

    st.markdown("---")

    if law_type == "Hukum Newton II (F = m * a)":
        st.subheader("Hukum Newton II: F = m √ó a")
        st.write("Hukum ini menyatakan bahwa gaya (F) yang bekerja pada suatu benda sama dengan massa (m) benda dikalikan dengan percepatannya (a).")

        st.markdown("---")
        st.subheader("Input Nilai (Isi dua dari tiga kolom):")

        # Menggunakan session state untuk menyimpan nilai input sementara
        if 'force_input' not in st.session_state:
            st.session_state.force_input = 0.0
        if 'mass_input' not in st.session_state:
            st.session_state.mass_input = 0.0
        if 'acceleration_input' not in st.session_state:
            st.session_state.acceleration_input = 0.0

        col1, col2, col3 = st.columns(3)
        with col1:
            force_val = st.number_input("Gaya (F) dalam Newton (N)", min_value=0.0, value=st.session_state.force_input, step=0.1, format="%.2f")
        with col2:
            mass_val = st.number_input("Massa (m) dalam Kilogram (kg)", min_value=0.0, value=st.session_state.mass_input, step=0.1, format="%.2f")
        with col3:
            acceleration_val = st.number_input("Percepatan (a) dalam m/s¬≤", min_value=0.0, value=st.session_state.acceleration_input, step=0.1, format="%.2f")

        # Update session state
        st.session_state.force_input = force_val
        st.session_state.mass_input = mass_val
        st.session_state.acceleration_input = acceleration_val

        # Menentukan input yang diberikan
        num_inputs_filled = 0
        inputs = {}
        if force_val > 0:
            num_inputs_filled += 1
            inputs['force'] = force_val
        if mass_val > 0:
            num_inputs_filled += 1
            inputs['mass'] = mass_val
        if acceleration_val > 0:
            num_inputs_filled += 1
            inputs['acceleration'] = acceleration_val

        if st.button("Hitung"):
            if num_inputs_filled == 2:
                with st.spinner("Menghitung hasil..."):
                    time.sleep(1.5) # Simulasi loading

                result_message = ""
                if 'force' not in inputs:
                    result_message = calculate_newton_law(law_type, mass=inputs.get('mass'), acceleration=inputs.get('acceleration'))
                elif 'mass' not in inputs:
                    result_message = calculate_newton_law(law_type, force=inputs.get('force'), acceleration=inputs.get('acceleration'))
                elif 'acceleration' not in inputs:
                    result_message = calculate_newton_law(law_type, force=inputs.get('force'), mass=inputs.get('mass'))

                st.success(f"Hasil Perhitungan: {result_message}")

                # Animasi sederhana dengan emoji
                st.markdown("---")
                st.subheader("Visualisasi Fisika!")
                animation_placeholder = st.empty()
                emojis = ["‚û°Ô∏è", "‚û°Ô∏è‚û°Ô∏è", "‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è", "üí•", "‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è", "‚û°Ô∏è‚û°Ô∏è", "‚û°Ô∏è"]
                for i in range(3): # Ulangi animasi 3 kali
                    for emoji in emojis:
                        animation_placeholder.markdown(f"<h1 style='text-align: center;'>{emoji}</h1>", unsafe_allow_html=True)
                        time.sleep(0.1)
                animation_placeholder.empty()
                st.success("Perhitungan selesai! Konsep fisika dalam genggaman Anda! ‚ú®")

            elif num_inputs_filled < 2:
                st.warning("Mohon masukkan minimal dua nilai untuk melakukan perhitungan.")
            else:
                st.warning("Hanya dua nilai yang diperlukan untuk perhitungan. Mohon kosongkan satu kolom jika Anda ingin menghitung sisanya.")

    elif law_type == "Hukum Newton I (Inersia)":
        st.subheader("Hukum Newton I: Hukum Inersia")
        st.markdown("""
            <p style='font-size: 16px;'>
                Sebuah objek akan tetap dalam keadaan diam atau bergerak lurus beraturan
                kecuali ada gaya eksternal yang bekerja padanya. Ini adalah konsep <b>inersia</b>.
            </p>
        """, unsafe_allow_html=True)
        st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Newton%27s_first_law_of_motion.svg/640px-Newton%27s_first_law_of_motion.svg.png",
                 caption="Contoh Inersia: Bola diam tetap diam", use_column_width=True)
        st.markdown("""
            <p style='text-align: center;'>
                <b>Contoh:</b> Ketika bus mengerem mendadak, tubuh Anda terdorong ke depan karena inersia tubuh Anda cenderung ingin mempertahankan gerak maju.
            </p>
        """, unsafe_allow_html=True)
        # Animasi sederhana
        st.markdown("---")
        st.subheader("Ilustrasi Inersia")
        inertia_placeholder = st.empty()
        states = ["üî¥ diam", "üî¥ diam", "üî¥ bergerak ->", "üî¥ bergerak ->", "üî¥ bergerak ->"]
        for _ in range(2):
            for state in states:
                inertia_placeholder.markdown(f"<h2 style='text-align: center;'>{state}</h2>", unsafe_allow_html=True)
                time.sleep(0.5)
        inertia_placeholder.markdown("<h2 style='text-align: center;'>üî¥ diam (tetap diam)</h2>", unsafe_allow_html=True)


    elif law_type == "Hukum Newton III (Aksi-Reaksi)":
        st.subheader("Hukum Newton III: Hukum Aksi-Reaksi")
        st.markdown("""
            <p style='font-size: 16px;'>
                Untuk setiap aksi, selalu ada reaksi yang sama besar dan berlawanan arah.
            </p>
        """, unsafe_allow_html=True)
        st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Newton%27s_third_law.svg/640px-Newton%27s_third_law.svg.png",
                 caption="Aksi dan Reaksi", use_column_width=True)
        st.markdown("""
            <p style='text-align: center;'>
                <b>Contoh:</b> Ketika Anda mendorong dinding, dinding mendorong Anda kembali dengan gaya yang sama besar.
            </p>
        """, unsafe_allow_html=True)
        # Animasi sederhana
        st.markdown("---")
        st.subheader("Ilustrasi Aksi-Reaksi")
        action_reaction_placeholder = st.empty()
        for _ in range(2):
            action_reaction_placeholder.markdown("<h2 style='text-align: center;'>‚¨ÖÔ∏è Dinding | Anda ‚û°Ô∏è</h2>", unsafe_allow_html=True)
            time.sleep(0.5)
            action_reaction_placeholder.markdown("<h2 style='text-align: center;'>üí• Dinding | Anda üí•</h2>", unsafe_allow_html=True)
            time.sleep(0.5)
            action_reaction_placeholder.markdown("<h2 style='text-align: center;'>Dinding ‚¨ÖÔ∏è | ‚û°Ô∏è Anda</h2>", unsafe_allow_html=True)
            time.sleep(0.5)
        action_reaction_placeholder.markdown("<h2 style='text-align: center;'>Aksi = Reaksi</h2>", unsafe_allow_html=True)


if __name__ == "__main__":
    # Saat menjalankan script ini sebagai file .py, bagian ngrok dan `streamlit run`
    # harus dipisahkan atau dijalankan secara eksternal (misalnya di terminal/Colab cell terpisah).

    # Jika Anda ingin script ini berjalan sendiri dan kemudian meluncurkan Streamlit + ngrok,
    # Anda perlu menyimpan kode Streamlit ini ke file Python, misalnya `app.py`.
    # Kemudian, Anda bisa menjalankan perintah shell untuk `ngrok` dan `streamlit`
    # di cell terpisah di Colab atau di terminal Anda.

    # Misal, simpan kode di atas ke file bernama `newton_app.py`.
    # Lalu, di Colab cell terpisah:

    # 1. Install Streamlit dan pyngrok
    # !pip install streamlit pyngrok --quiet

    # 2. Tambahkan auth token ngrok
    # !ngrok config add-authtoken 2uzt3zck7DsFcgSphPuyEpHgUiN_3gijm7UyXNThGByqVsBhA

    # 3. Buat file Streamlit dari kode di atas
    # from pyngrok import ngrok
    # import subprocess # Digunakan untuk menjalankan perintah shell di Python

    # nama file aplikasi Streamlit Anda
    # app_file_name = "newton_app.py"

    # with open(app_file_name, "w") as f:
    #     f.write("""
    #     # Salin dan tempel seluruh kode Streamlit Anda di sini
    #     # Dimulai dari import streamlit sampai if __name__ == "__main__": main()
    #     # ... (kode Streamlit yang lengkap) ...
    #     """)

    # 4. Jalankan Streamlit sebagai background process
    # subprocess.Popen(["streamlit", "run", app_file_name])

    # 5. Hubungkan ke Streamlit via ngrok
    # public_url = ngrok.connect(addr="8533", proto="http")
    # print("Aplikasi bisa diakses di link berikut:")
    # print(public_url)

    # Untuk menjalankan aplikasi Streamlit secara lokal tanpa ngrok (jika tidak di Colab):
    main() # Ini akan menjalankan aplikasi Streamlit jika Anda menjalankan file ini dengan `streamlit run nama_file.py`
